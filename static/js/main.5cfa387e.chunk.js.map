{"version":3,"sources":["Header.js","About.js","MyProjects.js","Skills.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","id","lib","to","About","MyProjects","Skills","Footer","Link","App","BrowserRouter","src_Header","src_About","src_Skills","src_MyProjects","src_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qQA4BeA,EAxBA,WACb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBC,GAAG,QACjCJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACG,EAAA,YAAD,CAAMC,GAAG,UACPN,EAAAC,EAAAC,cAAA,mBAEFF,EAAAC,EAAAC,cAACG,EAAA,YAAD,CAAMC,GAAG,WACPN,EAAAC,EAAAC,cAAA,uBAEFF,EAAAC,EAAAC,cAACG,EAAA,YAAD,CAAMC,GAAG,YACPN,EAAAC,EAAAC,cAAA,qBAEFF,EAAAC,EAAAC,cAACG,EAAA,YAAD,CAAMC,GAAG,cACPN,EAAAC,EAAAC,cAAA,2BAIJF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,4DCOSK,EA3BD,WACZ,OACEP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBC,GAAG,SAChCJ,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,4UAMEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAPF,gGAUEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAXF,4LAeEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAhBF,yICUSM,EAdI,WACjB,OACER,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBC,GAAG,YACrCJ,EAAAC,EAAAC,cAAA,yBAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,kBCAOM,EARA,WACb,OACET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBC,GAAG,UACjCJ,EAAAC,EAAAC,cAAA,6BCkBSQ,EAnBA,WACX,OACIV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAML,GAAG,KAAT,IAAeN,EAAAC,EAAAC,cAAA,sBACfF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAML,GAAG,KAAT,IAAeN,EAAAC,EAAAC,cAAA,wBACfF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAML,GAAG,KAAT,IAAeN,EAAAC,EAAAC,cAAA,sBAEnBF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAML,GAAG,KAAT,IAAeN,EAAAC,EAAAC,cAAA,kDCSpBU,mLAdX,OACEZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACY,EAAD,MACAd,EAAAC,EAAAC,cAACa,EAAD,MACAf,EAAAC,EAAAC,cAACc,EAAD,MACAhB,EAAAC,EAAAC,cAACe,EAAD,MACAjB,EAAAC,EAAAC,cAACgB,EAAD,eATQC,aCGEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1B,EAAAC,EAAAC,cAACyB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.5cfa387e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { NavHashLink as Link } from \"react-router-hash-link\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"section-header\" id=\"home\">\r\n      <div className=\"navi\">\r\n        <Link to=\"/#home\">\r\n          <h3>Home</h3>\r\n        </Link>\r\n        <Link to=\"/#about\">\r\n          <h3>About Me</h3>\r\n        </Link>\r\n        <Link to=\"/#skills\">\r\n          <h3>Skills</h3>\r\n        </Link>\r\n        <Link to=\"/#projects\">\r\n          <h3>My Projects</h3>\r\n        </Link>\r\n      </div>\r\n\r\n      <h1>Gintare Zolubaite</h1>\r\n      <h2> London based Full-Stack Software Developer </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"section-about\" id=\"about\">\r\n      <h2>About Me</h2>\r\n      <p>\r\n        Hi. My name is Gintare. I am ambitious and enthusiastic software\r\n        developer based in London. I have experience in working for a number of\r\n        technology companies in different capacities however I have decided to\r\n        focus on full stack software development. My approach to work is\r\n        accuracy and working hard to achieve the goals.\r\n        <br />\r\n        <br />\r\n        I have experience working with number of technologies including React,\r\n        JavaScript, HTML, CSS.\r\n        <br />\r\n        <br />\r\n        I have a BsC HONS degree in Bioinforamtics from Vilnius University. My\r\n        early experience involved team building, management and communications.\r\n        These are skills I apply on a daily basis.\r\n        <br />\r\n        <br />I have a wide range of interests including tv technology, lindy\r\n        hop and I am a violinist for the London Medical Symphony orchestra.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nconst MyProjects = () => {\r\n  return (\r\n    <div className=\"section-myprojects\" id=\"projects\">\r\n      <h2>My Projects</h2>\r\n\r\n      <div className=\"projects-box\">\r\n        <div className=\"project project1\">Coming soon</div>\r\n        <div className=\"project project2\">Coming Soon</div>\r\n        <div className=\"project project3\">Coming Soon</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyProjects;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nconst Skills = () => {\r\n  return (\r\n    <div className=\"section-skills\" id=\"skills\">\r\n      <h2>Skills</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className='section-footer'>\r\n\r\n            <div className='footer-container'>\r\n                <div className='footer-box1'>\r\n                    <Link to='/' > <p> Github </p></Link>\r\n                    <Link to='/' > <p> LinkedIn </p></Link>\r\n                    <Link to='/' > <p> Email </p></Link>\r\n                </div>\r\n                <div className='footer-box2'>\r\n                    <Link to='/' > <p> Made by Gintare Zolubaite 2018 </p></Link>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport About from \"./About\";\nimport MyProjects from \"./MyProjects\";\nimport Skills from \"./Skills\";\nimport Footer from \"./Footer\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Header />\n          <About />\n          <Skills />\n          <MyProjects />\n          <Footer />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nif (module.hot) {\n  module.hot.accept();\n}\n"],"sourceRoot":""}