{"version":3,"sources":["About.js","MyProjects.js","ContactMe.js","Header.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["About","react_default","a","createElement","className","MyProjects","ContactMe","type","name","id","placeholder","required","for","value","Header","Link","to","Route","path","Footer","App","BrowserRouter","src_Header","src_About","src_MyProjects","src_ContactMe","src_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d43bb9e8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className='section-about'>\r\n            <h2>About Me</h2>\r\n            <p>\r\n                Hi. My name is Gintare.\r\n                I am ambitious and enthusiastic software developer based in London.\r\n                I have experience in working for a number of technology companies in different\r\n                capacities however I have decided to focus on full stack software development.\r\n                My approach to work is accuracy and working hard to achieve the goals.\r\n                <br />\r\n                <br />\r\n                I have experience working with number of technologies including React, JavaScript,\r\n                HTML, CSS.\r\n                <br />\r\n                <br />\r\n                I have a BsC HONS degree in Bioinforamtics from Vilnius University.\r\n                My early experience involved team building, management and communications.\r\n                These are skills I apply on a daily basis.\r\n                <br />\r\n                <br />\r\n                I have a wide range of interests including tv technology, lindy hop and I am a\r\n                violinist for the London Medical Symphony orchestra.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nconst MyProjects = () => {\r\n    return (\r\n        <div className='section-myprojects'>\r\n            <h2>My Projects</h2>\r\n\r\n            <div className='projects-box'>\r\n                <div className='project project1'>Coming soon</div>\r\n                <div className='project project2'>Coming Soon</div>\r\n                <div className='project project3'>Coming Soon</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MyProjects;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nconst ContactMe = () => {\r\n    return (\r\n        <div className='section-contactme'>\r\n            <h2>Drop me a message!</h2>\r\n\r\n            <div className='contact-form'>\r\n                <div className='contact-name'>\r\n                    <label>Your Name</label>\r\n                    <input type='text' name='name' id='name' placeholder='Your name' required />\r\n                </div>\r\n\r\n                <div className='contact-email'>\r\n                    <label for=\"email\">Email</label>\r\n                    <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Your email\" required />\r\n                </div>\r\n\r\n                <div className='contact-message'>\r\n                    <label>Your message</label>\r\n                    <textarea name=\"message\" placeholder=\"Your message\"></textarea>\r\n                </div>\r\n\r\n                <button>\r\n                    <input type=\"submit\" value=\"Send it\" />\r\n                </button>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactMe;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Route } from 'react-router-dom';\r\nimport About from './About';\r\nimport MyProjects from './MyProjects';\r\nimport ContactMe from './ContactMe';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className='section-header'>\r\n\r\n            <div className='navi'>\r\n                <Link to='/'><h3>Home</h3></Link>\r\n                <Link to='/about'><h3>About Me</h3></Link>\r\n                <Link to='/myProjects'><h3>My Projects</h3></Link>\r\n                <Link to='/contactMe'><h3>Contact Me</h3></Link>\r\n            </div>\r\n\r\n            <div className='navi-content'>\r\n                <Route path='/' />\r\n                <Route path='/about' />\r\n                <Route path='/myProjects' />\r\n                <Route path='/contactMe' />\r\n\r\n            </div>\r\n\r\n            <h1>Gintare Zolubaite</h1>\r\n            <h2> Welcome to my website. </h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className='section-footer'>\r\n\r\n            <div className='footer-container'>\r\n                <div className='footer-box1'>\r\n                    <div> Github</div>\r\n                    <div> LinkedIn</div>\r\n                    <div> Email</div>\r\n                </div>\r\n                <div className='footer-box2'>\r\n                    <div> Made by Gintare Zolubaite</div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport Header from './Header';\nimport About from './About';\nimport MyProjects from './MyProjects';\nimport ContactMe from './ContactMe';\nimport Footer from './Footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Header />\n          <About />\n          <MyProjects />\n          <ContactMe />\n          <Footer />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}